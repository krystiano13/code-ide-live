{"version":3,"file":"static/js/259.19373766.chunk.js","mappings":"+JAKAA,EAAQ,IACRA,EAAQ,KACRA,EAAQ,KAmDR,UAjDiB,SAACC,GAChB,IAAAC,EAA0BC,EAAAA,WAAgBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAChBI,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,IAAI,IAC5CC,GAAUH,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMG,GAAG,IAC1CC,GAASL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMK,EAAE,IAgB9C,OAdAC,EAAAA,EAAAA,YAAU,WACR,OAAQjB,EAAMkB,MACZ,IAAK,MACHZ,EAASG,GACT,MACF,IAAK,MACHH,EAASO,GACT,MACF,IAAK,aACHP,EAASS,GAGf,GAAG,CAACN,EAAUI,EAASE,KAGrBI,EAAAA,EAAAA,KAACC,EAAAA,GAAU,CACTf,MAAOA,EACPgB,QAAS,CACPH,KAAMlB,EAAMkB,KACZI,MAAO,WACPC,aAAa,GAEfC,eAAgB,SAACC,EAAQC,EAAMrB,GAC7BC,EAASD,EACX,EACAsB,SAAU,SAACF,EAAQC,EAAMrB,GACvB,OAAQL,EAAMkB,MACZ,IAAK,MACHX,GAASK,EAAAA,EAAAA,IAAKP,IACd,MACF,IAAK,MACHE,GAASO,EAAAA,EAAAA,IAAIT,IACb,MACF,IAAK,aACHE,GAASS,EAAAA,EAAAA,IAAGX,IAGlB,GAGN,C","sources":["components/editor/EditArea/EditArea.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { html, css, js } from \"../../../reducers/codeReducer\";\r\n\r\nrequire(\"codemirror/mode/xml/xml\");\r\nrequire(\"codemirror/mode/javascript/javascript\");\r\nrequire(\"codemirror/mode/css/css\");\r\n\r\nconst EditArea = (props) => {\r\n  const [value, setValue] = React.useState();\r\n  const dispatch = useDispatch();\r\n  const htmlLang = useSelector((state) => state.html);\r\n  const cssLang = useSelector((state) => state.css);\r\n  const jsLang = useSelector((state) => state.js);\r\n\r\n  useEffect(() => {\r\n    switch (props.mode) {\r\n      case \"xml\":\r\n        setValue(htmlLang);\r\n        break;\r\n      case \"css\":\r\n        setValue(cssLang);\r\n        break;\r\n      case \"javascript\":\r\n        setValue(jsLang);\r\n        break;\r\n    }\r\n  }, [htmlLang, cssLang, jsLang]);\r\n\r\n  return (\r\n    <CodeMirror\r\n      value={value}\r\n      options={{\r\n        mode: props.mode,\r\n        theme: \"material\",\r\n        lineNumbers: true,\r\n      }}\r\n      onBeforeChange={(editor, data, value) => {\r\n        setValue(value);\r\n      }}\r\n      onChange={(editor, data, value) => {\r\n        switch (props.mode) {\r\n          case \"xml\":\r\n            dispatch(html(value));\r\n            break;\r\n          case \"css\":\r\n            dispatch(css(value));\r\n            break;\r\n          case \"javascript\":\r\n            dispatch(js(value));\r\n            break;\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EditArea;\r\n"],"names":["require","props","_React$useState","React","_React$useState2","_slicedToArray","value","setValue","dispatch","useDispatch","htmlLang","useSelector","state","html","cssLang","css","jsLang","js","useEffect","mode","_jsx","CodeMirror","options","theme","lineNumbers","onBeforeChange","editor","data","onChange"],"sourceRoot":""}